unit FileTypes;

{$mode objfpc}{$H+}
interface
  type ThornWriterFile = record
     Title: string;
     Author: string;
     Website: string;
     Description: string;
     CustomCharacters: array of string;
     RtfData: string;
  end;
  procedure SaveWriterFile(writer_file: ThornWriterFile; path: string);
  function ReadWriterFile(path: string) : ThornWriterFile;
  function ReadSafeString(source: string) : string;
  function WriteSafeString(source: string) : string;

implementation
  uses SysUtils,Dialogs,IniFiles,Classes;
 const
   UNIX_LINE : string = AnsiChar(#10);
   WINDOWS_LINE : string = AnsiString(#13#10);
  procedure SaveWriterFile(writer_file: ThornWriterFile; path: string);
  var output: TextFile;
  begin
    AssignFile(output, path);

  end;

  procedure Split(Delimiter: Char; Str: string; ListOfStrings: TStrings) ;
  begin
     ListOfStrings.Clear;
     ListOfStrings.Delimiter       := Delimiter;
     ListOfStrings.StrictDelimiter := True; // Requires D2006 or newer.
     ListOfStrings.DelimitedText   := Str;
  end;

  function ReadWriterFile(path: string) : ThornWriterFile;
  var
    ret: ThornWriterFile;
    INI: TINIFile;
    char_pos: Integer;
  begin
    try
      if FileExists(path) then
      begin
        INI := TINIFile.Create(path);
        ret.Author := ReadSafeString(INI.ReadString('Properties','Author',''));
        ret.Description := ReadSafeString(INI.ReadString('Properties','Description',''));
        ret.Title := ReadSafeString(INI.ReadString('Properties','Title',''));
        ret.Website := ReadSafeString(INI.ReadString('Properties','Website',''));
        ret.CustomCharacters := INI.ReadString('Properties','Characters','').Split('|',TStringSplitOptions.ExcludeEmpty);
        ret.RtfData := ReadSafeString(INI.ReadString('Document','Page0',''));

        for char_pos:=0 to Length(ret.CustomCharacters)-1 do
        begin
          ret.CustomCharacters[char_pos] := ReadSafeString(ret.CustomCharacters[char_pos]);
        end;
      end;
    except
      on E: EInOutError do
       ShowMessage('File handling error occurred. Details: ' + E.Message);
    end;

    INI.Free;
    result := ret;
  end;

  function WriteSafeString(source: string) : string;
  var
    temp: string;
  begin
    temp := source;
    temp := temp.Replace('[','&lsbr');
    temp := temp.Replace(']','&rsbr');
    temp := temp.Replace('=','&eq');
    temp := temp.Replace('<','&lt');
    temp := temp.Replace('>','&gt');
    temp := temp.Replace(';','&sc');
    temp := temp.Replace('|','&bar');
    temp := temp.Replace(UNIX_LINE,'&unix');
    temp := temp.Replace(WINDOWS_LINE,'&win32');
    temp := temp.Replace(' ','&sp');

    result := temp;
  end;

  function ReadSafeString(source: string) : string;
  var
    temp: string;
  begin
    temp := source;
    temp := temp.Replace('&lsbr','[');
    temp := temp.Replace('&rsbr',']');
    temp := temp.Replace('&eq','=');
    temp := temp.Replace('&lt','<');
    temp := temp.Replace('&gt','>');
    temp := temp.Replace('&sc',';');
    temp := temp.Replace('&bar','|');
    temp := temp.Replace('&unix',UNIX_LINE);
    temp := temp.Replace('&win32',WINDOWS_LINE);
    temp := temp.Replace('&sp',' ');

    result := temp;
  end;
end.

